services:
  api:
    build:
      dockerfile: Dockerfile
      context: ..
    restart: unless-stopped
    depends_on:
      - kafka
      - jaeger
    volumes:
      - ..:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    working_dir: /app
    command: /bin/operion-api run --port 8099 --database-url file:///app/examples/data --event-bus kafka
    ports:
      - 8099:8099
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=operion-api
      - OTEL_TRACES_EXPORTER=otlp
      - KAFKA_BROKERS=kafka:9092
    develop:
      watch:
        - action: rebuild
          path: ..

  editor:
    build:
      dockerfile: Dockerfile
      context: ../ui/operion-editor
      args:
        API_BASE_URL: http://localhost:8099
    ports:
      - 8900:8080
    depends_on:
      - api

  trigger-kafka:
    build: 
      dockerfile: Dockerfile 
      context: ..
    restart: unless-stopped
    depends_on:
      - kafka
      - jaeger
    volumes:
      - ..:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    working_dir: /app
    command: /bin/operion-trigger run --database-url file:///app/examples/data --event-bus kafka
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=operion-trigger-kafka
      - OTEL_TRACES_EXPORTER=otlp
      - KAFKA_BROKERS=kafka:9092
    develop:
      watch:
        - action: rebuild
          path: ..

  worker-kafka:
    build: 
      dockerfile: Dockerfile 
      context: ..
    restart: unless-stopped
    depends_on:
      - kafka
      - jaeger
    volumes:
      - ..:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    working_dir: /app
    command: /bin/operion-worker run --database-url file:///app/examples/data --event-bus kafka --plugins-path ./examples/plugins
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=operion-worker-kafka
      - OTEL_TRACES_EXPORTER=otlp
      - KAFKA_BROKERS=kafka:9092
    develop:
      watch:
        - action: rebuild
          path: ..

  # Event bus

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    ports:
      - 2181:2181
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    user: root
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_SERVICE_NAME: kafka
      OTEL_TRACES_EXPORTER: otlp
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq:dev
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            local:
              properties:
                bootstrap.servers: "kafka:9092"
          topic-data:
            sort: NEWEST
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - zookeeper

  # Observability

  jaeger:
    image: jaegertracing/jaeger:2.7.0
    ports:
      - 16686:16686
      - 5778:5778
      - 9411:9411
      - 4318:4318 
