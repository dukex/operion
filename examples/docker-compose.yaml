services:
  # api:
  #   image: golang:1.24
  #   restart: unless-stopped
  #   volumes:
  #     - .:/app
  #     - $GOPATH/pkg/mod:/go/pkg/mod
  #   working_dir: /app
  #   command: go run cmd/api/main.go

  trigger-kafka:
    build: 
      dockerfile: Dockerfile 
      context: ..
    restart: unless-stopped
    depends_on:
      - kafka
      - otel-collector
      - jaeger
    volumes:
      - ..:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    working_dir: /app
    command: /bin/operion-trigger run --kafka --data-path /app/examples/data
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=operion-trigger-kafka
      - OTEL_TRACES_EXPORTER=otlp
      - KAFKA_BROKERS=kafka:9092
    develop:
      watch:
        - action: rebuild
          path: ..

  worker-kafka:
    build: 
      dockerfile: Dockerfile 
      context: ..
    restart: unless-stopped
    depends_on:
      - kafka
      - otel-collector
      - jaeger
    volumes:
      - ..:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    working_dir: /app
    command: /bin/operion-worker run --kafka --data-path /app/examples/data
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=operion-worker-kafka
      - OTEL_TRACES_EXPORTER=otlp
      - KAFKA_BROKERS=kafka:9092
    develop:
      watch:
        - action: rebuild
          path: ..

  # worker-rabbitmq:
  #   image: golang:1.24
  #   restart: unless-stopped
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - .:/app
  #     - $GOPATH/pkg/mod:/go/pkg/mod
  #   working_dir: /app
  #   command: go run cmd/operion-worker/main.go run --rabbitmq

  # worker-mysql:
  #   image: golang:1.24
  #   restart: unless-stopped
  #   depends_on:
  #     - mysql
  #   volumes:
  #     - .:/app
  #     - $GOPATH/pkg/mod:/go/pkg/mod
  #   working_dir: /app
  #   command: go run cmd/operion-worker/main.go run --mysql
  
  # worker-gochannel:
  #   image: golang:1.24
  #   restart: unless-stopped
  #   volumes:
  #     - .:/app
  #     - $GOPATH/pkg/mod:/go/pkg/mod
  #   working_dir: /app
  #   command: go run cmd/operion-worker/main.go run

  # mysql:
  #   image: mysql:8.0
  #   restart: unless-stopped
  #   ports:
  #     - 3306:3306
  #   environment:
  #     MYSQL_DATABASE: watermill
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  # rabbitmq:
  #   image: rabbitmq:3.7
  #   restart: unless-stopped

  # Event bus
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    ports:
      - 2181:2181
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    user: root
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_SERVICE_NAME: kafka
      OTEL_TRACES_EXPORTER: otlp
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq:dev
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            local:
              properties:
                bootstrap.servers: "kafka:9092"
          topic-data:
            sort: NEWEST
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - zookeeper

  # Observability

  jaeger:
    image: jaegertracing/jaeger:2.7.0
    ports:
      - 16686:16686
      - 5778:5778
      - 9411:9411

  otel-collector:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.128.0
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    user: 0:0
    volumes:
      - ./otel-collector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - 13133
      - 4317
      - 4318
      - 55679
    depends_on:
      - jaeger




