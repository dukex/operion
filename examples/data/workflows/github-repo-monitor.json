{
  "id": "github-repo-monitor",
  "name": "GitHub Repository Monitor",
  "description": "Monitor GitHub repository activity including new issues, pull requests, and releases",
  "status": "published",
  "workflow_group_id": "github-repo-monitor",
  "published_at": "2023-10-01T00:00:00Z",
  "nodes": [
    {
      "id": "github-schedule",
      "name": "GitHub Monitor Schedule Trigger",
      "type": "trigger:scheduler",
      "category": "trigger",
      "config": {
        "cron": "0 */6 * * *",
        "timezone": "UTC"
      },
      "enabled": true,
      "provider_id": "scheduler",
      "event_type": "schedule_due",
      "position_x": 50,
      "position_y": 100
    },
    {
      "id": "fetch-repo-info",
      "name": "Fetch Repository Info",
      "config": {
        "url": "https://api.github.com/repos/{{.variables.repo_owner}}/{{.variables.repo_name}}",
        "method": "GET",
        "timeout": 10,
        "headers": {
          "Accept": "application/vnd.github.v3+json",
          "User-Agent": "Operion-GitHubMonitor/1.0"
        },
        "retries": {
          "attempts": 3,
          "delay": 2000
        }
      },
      "position_x": 100,
      "position_y": 100,
      "enabled": true,
      "type": "httprequest",
      "category": "action"
    },
    {
      "id": "fetch-recent-issues",
      "name": "Fetch Recent Issues",
      "config": {
        "url": "https://api.github.com/repos/{{.variables.repo_owner}}/{{.variables.repo_name}}/issues?state=all&sort=updated&per_page=5",
        "method": "GET",
        "timeout": 10,
        "headers": {
          "Accept": "application/vnd.github.v3+json",
          "User-Agent": "Operion-GitHubMonitor/1.0"
        }
      },
      "position_x": 100,
      "position_y": 250,
      "enabled": true,
      "type": "httprequest",
      "category": "action"
    },
    {
      "id": "fetch-recent-releases",
      "name": "Fetch Recent Releases",
      "config": {
        "url": "https://api.github.com/repos/{{.variables.repo_owner}}/{{.variables.repo_name}}/releases?per_page=3",
        "method": "GET",
        "timeout": 10,
        "headers": {
          "Accept": "application/vnd.github.v3+json",
          "User-Agent": "Operion-GitHubMonitor/1.0"
        }
      },
      "position_x": 100,
      "position_y": 400,
      "enabled": true,
      "type": "httprequest",
      "category": "action"
    },
    {
      "id": "process-repo-data",
      "name": "Process Repository Data",
      "config": {
        "expression": "{{ $repo := index .node_results \"fetch-repo-info\" }}{{ $issues := index .node_results \"fetch-recent-issues\" }}{{ $releases := index .node_results \"fetch-recent-releases\" }}{\n  \"repository\": {\n    \"name\": \"{{ $repo.json.full_name }}\",\n    \"description\": \"{{ $repo.json.description }}\",\n    \"stars\": {{ $repo.json.stargazers_count }},\n    \"forks\": {{ $repo.json.forks_count }},\n    \"open_issues\": {{ $repo.json.open_issues_count }},\n    \"language\": \"{{ $repo.json.language }}\",\n    \"last_push\": \"{{ $repo.json.pushed_at }}\"\n  },\n  \"recent_issues\": [{{ range $i, $issue := slice $issues.json 0 3 }}{{ if ne $i 0 }},{{ end }}{\n    \"title\": \"{{ $issue.title }}\",\n    \"state\": \"{{ $issue.state }}\",\n    \"created\": \"{{ $issue.created_at }}\",\n    \"updated\": \"{{ $issue.updated_at }}\",\n    \"author\": \"{{ $issue.user.login }}\"\n  }{{ end }}],\n  \"latest_releases\": [{{ range $i, $release := slice $releases.json 0 2 }}{{ if ne $i 0 }},{{ end }}{\n    \"name\": \"{{ $release.name }}\",\n    \"tag\": \"{{ $release.tag_name }}\",\n    \"published\": \"{{ $release.published_at }}\",\n    \"author\": \"{{ $release.author.login }}\"\n  }{{ end }}],\n  \"activity_score\": {{ add $repo.json.open_issues_count (len $issues.json) (len $releases.json) }},\n  \"timestamp\": \"{{now}}\"\n}"
      },
      "position_x": 300,
      "position_y": 250,
      "enabled": true,
      "type": "transform",
      "category": "action"
    },
    {
      "id": "log-activity",
      "name": "Log Repository Activity",
      "config": {
        "message": "{{ $summary := index .node_results \"process-repo-data\" }}GitHub Repo {{ $summary.repository.name }} - Stars: {{ $summary.repository.stars }}, Open Issues: {{ $summary.repository.open_issues }}, Activity Score: {{ $summary.activity_score }}"
      },
      "position_x": 500,
      "position_y": 250,
      "enabled": true,
      "type": "log",
      "category": "action"
    },
    {
      "id": "check-high-activity",
      "name": "Check High Activity",
      "config": {
        "expression": "{{ $summary := index .node_results \"process-repo-data\" }}{\n  \"high_activity\": {{ gt $summary.activity_score .variables.activity_threshold }},\n  \"alert_message\": \"{{ if gt $summary.activity_score .variables.activity_threshold }}High activity detected in {{ $summary.repository.name }}{{ else }}Normal activity level{{ end }}\"\n}"
      },
      "position_x": 700,
      "position_y": 250,
      "enabled": true,
      "type": "transform",
      "category": "action"
    },
    {
      "id": "send-activity-report",
      "name": "Send Activity Report",
      "config": {
        "url": "https://httpbin.org/post",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": "{{ $summary := index .node_results \"process-repo-data\" }}{{ $activity := index .node_results \"check-high-activity\" }}{\n  \"service\": \"github-monitor\",\n  \"timestamp\": \"{{ $summary.timestamp }}\",\n  \"repository\": {{ $summary.repository | toJson }},\n  \"recent_activity\": {\n    \"issues\": {{ $summary.recent_issues | toJson }},\n    \"releases\": {{ $summary.latest_releases | toJson }},\n    \"activity_score\": {{ $summary.activity_score }},\n    \"high_activity_alert\": {{ $activity.high_activity }}\n  },\n  \"alert_message\": \"{{ $activity.alert_message }}\"\n}",
        "timeout": 10
      },
      "position_x": 900,
      "position_y": 250,
      "enabled": true,
      "type": "httprequest",
      "category": "action"
    },
    {
      "id": "log-success",
      "name": "Log Success",
      "config": {
        "message": "{{ $summary := index .node_results \"process-repo-data\" }}{{ $activity := index .node_results \"check-high-activity\" }}GitHub monitoring completed for {{ $summary.repository.name }}. {{ $activity.alert_message }}"
      },
      "position_x": 1100,
      "position_y": 200,
      "enabled": true,
      "type": "log",
      "category": "action"
    },
    {
      "id": "log-repo-error",
      "name": "Log Repository Error",
      "config": {
        "message": "Failed to fetch repository data for {{.variables.repo_owner}}/{{.variables.repo_name}}"
      },
      "position_x": 300,
      "position_y": 100,
      "enabled": true,
      "type": "log",
      "category": "action"
    },
    {
      "id": "log-issues-error",
      "name": "Log Issues Error",
      "config": {
        "message": "Failed to fetch issues data for {{.variables.repo_owner}}/{{.variables.repo_name}}"
      },
      "position_x": 300,
      "position_y": 250,
      "enabled": true,
      "type": "log",
      "category": "action"
    },
    {
      "id": "log-releases-error",
      "name": "Log Releases Error",
      "config": {
        "message": "Failed to fetch releases data for {{.variables.repo_owner}}/{{.variables.repo_name}}"
      },
      "position_x": 300,
      "position_y": 400,
      "enabled": true,
      "type": "log",
      "category": "action"
    },
    {
      "id": "log-webhook-error",
      "name": "Log Webhook Error",
      "config": {
        "message": "Failed to send GitHub activity report"
      },
      "position_x": 1100,
      "position_y": 300,
      "enabled": true,
      "type": "log",
      "category": "action"
    }
  ],
  "connections": [
    {
      "id": "trigger-github-schedule-to-fetch-repo-info",
      "source_port": "github-schedule:success",
      "target_port": "fetch-repo-info:main"
    },
    {
      "id": "repo-to-issues",
      "source_port": "fetch-repo-info:success",
      "target_port": "fetch-recent-issues:main"
    },
    {
      "id": "repo-error",
      "source_port": "fetch-repo-info:error",
      "target_port": "log-repo-error:main"
    },
    {
      "id": "issues-to-releases",
      "source_port": "fetch-recent-issues:success",
      "target_port": "fetch-recent-releases:main"
    },
    {
      "id": "issues-error",
      "source_port": "fetch-recent-issues:error",
      "target_port": "log-issues-error:main"
    },
    {
      "id": "releases-to-process",
      "source_port": "fetch-recent-releases:success",
      "target_port": "process-repo-data:main"
    },
    {
      "id": "releases-error",
      "source_port": "fetch-recent-releases:error",
      "target_port": "log-releases-error:main"
    },
    {
      "id": "process-to-log",
      "source_port": "process-repo-data:success",
      "target_port": "log-activity:main"
    },
    {
      "id": "log-to-check",
      "source_port": "log-activity:success",
      "target_port": "check-high-activity:main"
    },
    {
      "id": "check-to-send",
      "source_port": "check-high-activity:success",
      "target_port": "send-activity-report:main"
    },
    {
      "id": "send-success",
      "source_port": "send-activity-report:success",
      "target_port": "log-success:main"
    },
    {
      "id": "send-error",
      "source_port": "send-activity-report:error",
      "target_port": "log-webhook-error:main"
    }
  ],
  "variables": {
    "repo_owner": "microsoft",
    "repo_name": "vscode",
    "activity_threshold": 15
  },
  "metadata": {
    "version": "1.0",
    "author": "Operion",
    "tags": [
      "github",
      "repository",
      "monitoring",
      "issues",
      "releases",
      "real-api"
    ],
    "description": "Real GitHub repository monitoring using GitHub's free API. No authentication required for public repos.",
    "api_requirements": {
      "github": "Free API - no key required for public repos. Rate limit: 60 requests/hour"
    }
  }
}