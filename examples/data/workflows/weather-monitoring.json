{
  "id": "weather-monitoring",
  "name": "Weather Monitoring System",
  "description": "Monitor weather conditions and alert when temperature exceeds thresholds using OpenWeatherMap API",
  "status": "active",
  "triggers": [
    {
      "id": "weather-schedule",
      "type": "schedule",
      "configuration": {
        "schedule": "0 */3 * * *",
        "timezone": "UTC"
      }
    }
  ],
  "steps": [
    {
      "id": "fetch-weather",
      "name": "Fetch Current Weather",
      "actionId": "http_request",
      "uid": "weather_data",
      "configuration": {
        "protocol": "https",
        "host": "api.openweathermap.org",
        "path": "/data/2.5/weather?q=vars.city&appid=env.OPENWEATHER_API_KEY&units=metric",
        "method": "GET",
        "timeout": 10,
        "headers": {
          "Accept": "application/json",
          "User-Agent": "Operion-WeatherMonitor/1.0"
        },
        "retry": {
          "attempts": 3,
          "delay": 2
        }
      },
      "onSuccess": "process-weather",
      "onFailure": "log-fetch-error",
      "enabled": true
    },
    {
      "id": "process-weather",
      "name": "Process Weather Data",
      "actionId": "transform",
      "uid": "weather_processed",
      "configuration": {
        "expression": "{\n  \"city\": steps.weather_data.body.name,\n  \"country\": steps.weather_data.body.sys.country,\n  \"temperature\": steps.weather_data.body.main.temp,\n  \"feels_like\": steps.weather_data.body.main.feels_like,\n  \"humidity\": steps.weather_data.body.main.humidity,\n  \"pressure\": steps.weather_data.body.main.pressure,\n  \"weather\": steps.weather_data.body.weather[0].description,\n  \"wind_speed\": steps.weather_data.body.wind.speed,\n  \"timestamp\": $now(),\n  \"alert_needed\": steps.weather_data.body.main.temp > vars.temperature_threshold\n}"
      },
      "onSuccess": "check-alert",
      "enabled": true
    },
    {
      "id": "check-alert",
      "name": "Check Alert Condition",
      "actionId": "transform",
      "uid": "alert_decision",
      "configuration": {
        "expression": "steps.weather_processed.alert_needed ? \"ALERT\" : \"OK\""
      },
      "onSuccess": "log-weather-status",
      "enabled": true
    },
    {
      "id": "log-weather-status",
      "name": "Log Weather Status",
      "actionId": "log",
      "uid": "weather_log",
      "configuration": {
        "message": "\"Weather in \" & steps.weather_processed.city & \": \" & $string(steps.weather_processed.temperature) & \"Â°C (\" & steps.weather_processed.weather & \") - Status: \" & steps.alert_decision"
      },
      "onSuccess": "send-webhook",
      "enabled": true
    },
    {
      "id": "send-webhook",
      "name": "Send Weather Report",
      "actionId": "http_request",
      "uid": "webhook_response",
      "configuration": {
        "protocol": "https",
        "host": "httpbin.org",
        "path": "/post",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": "{\n  \"service\": \"weather-monitoring\",\n  \"timestamp\": steps.weather_processed.timestamp,\n  \"location\": {\n    \"city\": steps.weather_processed.city,\n    \"country\": steps.weather_processed.country\n  },\n  \"weather\": {\n    \"temperature\": steps.weather_processed.temperature,\n    \"feels_like\": steps.weather_processed.feels_like,\n    \"description\": steps.weather_processed.weather,\n    \"humidity\": steps.weather_processed.humidity,\n    \"wind_speed\": steps.weather_processed.wind_speed\n  },\n  \"alert_status\": steps.alert_decision,\n  \"threshold\": vars.temperature_threshold\n}",
        "timeout": 10
      },
      "onSuccess": "log-success",
      "onFailure": "log-webhook-error",
      "enabled": true
    },
    {
      "id": "log-success",
      "name": "Log Success",
      "actionId": "log",
      "uid": "success_log",
      "configuration": {
        "message": "\"Weather monitoring completed successfully for \" & steps.weather_processed.city"
      },
      "enabled": true
    },
    {
      "id": "log-fetch-error",
      "name": "Log Fetch Error",
      "actionId": "log",
      "uid": "fetch_error_log",
      "configuration": {
        "message": "\"Failed to fetch weather data for \" & vars.city"
      },
      "enabled": true
    },
    {
      "id": "log-webhook-error",
      "name": "Log Webhook Error",
      "actionId": "log",
      "uid": "webhook_error_log",
      "configuration": {
        "message": "\"Failed to send weather report webhook\""
      },
      "enabled": true
    }
  ],
  "variables": {
    "city": "London",
    "temperature_threshold": 30
  },
  "metadata": {
    "version": "1.0",
    "author": "Operion",
    "tags": ["weather", "monitoring", "openweathermap", "real-api"],
    "description": "Real weather monitoring using OpenWeatherMap API. Requires OPENWEATHER_API_KEY environment variable.",
    "api_requirements": {
      "openweathermap": "Free API key from https://openweathermap.org/api"
    }
  }
}