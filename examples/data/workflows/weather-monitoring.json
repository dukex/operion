{
  "id": "weather-monitoring",
  "name": "Weather Monitoring System",
  "description": "Monitor weather conditions and alert when temperature exceeds thresholds using OpenWeatherMap API",
  "status": "published",
  "workflow_group_id": "weather-monitoring",
  "published_at": "2023-10-01T00:00:00Z",
  "nodes": [
    {
      "id": "weather-schedule",
      "name": "Weather Schedule Trigger",
      "node_type": "trigger:scheduler",
      "category": "trigger",
      "config": {
        "cron": "0 */3 * * *",
        "timezone": "UTC"
      },
      "enabled": true,
      "provider_id": "scheduler",
      "event_type": "schedule_due",
      "position_x": 50,
      "position_y": 100
    },
    {
      "id": "fetch-weather",
      "name": "Fetch Current Weather",
      "config": {
        "url": "https://api.openweathermap.org/data/2.5/weather?q={{.variables.city}}&appid={{.env.OPENWEATHER_API_KEY}}&units=metric",
        "method": "GET",
        "timeout": 10,
        "headers": {
          "Accept": "application/json",
          "User-Agent": "Operion-WeatherMonitor/1.0"
        },
        "retries": {
          "attempts": 3,
          "delay": 2000
        }
      },
      "position_x": 100,
      "position_y": 100,
      "enabled": true,
      "node_type": "httprequest",
      "category": "action"
    },
    {
      "id": "process-weather",
      "name": "Process Weather Data",
      "config": {
        "expression": "{{ $weather := index .node_results \"fetch-weather\" }}{{ $data := $weather.json }}{ \"city\": \"{{ $data.name }}\", \"country\": \"{{ $data.sys.country }}\", \"temperature\": {{ $data.main.temp }}, \"feels_like\": {{ $data.main.feels_like }}, \"humidity\": {{ $data.main.humidity }}, \"pressure\": {{ $data.main.pressure }}, \"weather\": \"{{ index $data.weather 0 \"description\" }}\", \"wind_speed\": {{ $data.wind.speed }}, \"timestamp\": \"{{now}}\", \"alert_needed\": {{ if gt $data.main.temp .variables.temperature_threshold }}true{{ else }}false{{ end }} }"
      },
      "position_x": 300,
      "position_y": 100,
      "enabled": true,
      "node_type": "transform",
      "category": "action"
    },
    {
      "id": "check-alert",
      "name": "Check Alert Condition",
      "config": {
        "expression": "{{ $processed := index .node_results \"process-weather\" }}{{ if $processed.result.alert_needed }}\"ALERT\"{{ else }}\"OK\"{{ end }}"
      },
      "position_x": 500,
      "position_y": 100,
      "enabled": true,
      "node_type": "transform",
      "category": "action"
    },
    {
      "id": "log-weather-status",
      "name": "Log Weather Status",
      "config": {
        "message": "{{ $processed := index .node_results \"process-weather\" }}{{ $alert := index .node_results \"check-alert\" }}Weather in {{ $processed.result.city }}: {{ $processed.result.temperature }}Â°C ({{ $processed.result.weather }}) - Status: {{ $alert.result }}",
        "level": "info"
      },
      "position_x": 700,
      "position_y": 50,
      "enabled": true,
      "node_type": "log",
      "category": "action"
    },
    {
      "id": "send-webhook",
      "name": "Send Weather Report",
      "config": {
        "url": "https://httpbin.org/post",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": "{{ $processed := index .node_results \"process-weather\" }}{{ $alert := index .node_results \"check-alert\" }}{ \"service\": \"weather-monitoring\", \"timestamp\": \"{{ $processed.result.timestamp }}\", \"location\": { \"city\": \"{{ $processed.result.city }}\", \"country\": \"{{ $processed.result.country }}\" }, \"weather\": { \"temperature\": {{ $processed.result.temperature }}, \"feels_like\": {{ $processed.result.feels_like }}, \"description\": \"{{ $processed.result.weather }}\", \"humidity\": {{ $processed.result.humidity }}, \"wind_speed\": {{ $processed.result.wind_speed }} }, \"alert_status\": \"{{ $alert.result }}\", \"threshold\": {{ .variables.temperature_threshold }} }",
        "timeout": 10,
        "retries": {
          "attempts": 1,
          "delay": 0
        }
      },
      "position_x": 700,
      "position_y": 150,
      "enabled": true,
      "node_type": "httprequest",
      "category": "action"
    },
    {
      "id": "log-success",
      "name": "Log Success",
      "config": {
        "message": "{{ $processed := index .node_results \"process-weather\" }}Weather monitoring completed successfully for {{ $processed.result.city }}",
        "level": "info"
      },
      "position_x": 900,
      "position_y": 100,
      "enabled": true,
      "node_type": "log",
      "category": "action"
    },
    {
      "id": "log-fetch-error",
      "name": "Log Fetch Error",
      "config": {
        "message": "Failed to fetch weather data for {{.variables.city}}",
        "level": "error"
      },
      "position_x": 300,
      "position_y": 250,
      "enabled": true,
      "node_type": "log",
      "category": "action"
    },
    {
      "id": "log-webhook-error",
      "name": "Log Webhook Error",
      "config": {
        "message": "Failed to send weather report webhook",
        "level": "error"
      },
      "position_x": 700,
      "position_y": 250,
      "enabled": true,
      "node_type": "log",
      "category": "action"
    }
  ],
  "connections": [
    {
      "id": "trigger-weather-schedule-to-fetch-weather",
      "source_port": "weather-schedule:success",
      "target_port": "fetch-weather:main"
    },
    {
      "id": "fetch-to-process",
      "source_port": "fetch-weather:success",
      "target_port": "process-weather:main"
    },
    {
      "id": "process-to-alert",
      "source_port": "process-weather:success",
      "target_port": "check-alert:main"
    },
    {
      "id": "alert-to-log",
      "source_port": "check-alert:success",
      "target_port": "log-weather-status:main"
    },
    {
      "id": "log-to-webhook",
      "source_port": "log-weather-status:success",
      "target_port": "send-webhook:main"
    },
    {
      "id": "webhook-to-success",
      "source_port": "send-webhook:success",
      "target_port": "log-success:main"
    },
    {
      "id": "fetch-error",
      "source_port": "fetch-weather:error",
      "target_port": "log-fetch-error:main"
    },
    {
      "id": "webhook-error",
      "source_port": "send-webhook:error",
      "target_port": "log-webhook-error:main"
    }
  ],
  "variables": {
    "city": "London",
    "temperature_threshold": 30
  },
  "metadata": {
    "version": "1.0",
    "author": "Operion",
    "tags": [
      "weather",
      "monitoring",
      "openweathermap",
      "real-api"
    ],
    "description": "Real weather monitoring using OpenWeatherMap API. Requires OPENWEATHER_API_KEY environment variable.",
    "api_requirements": {
      "openweathermap": "Free API key from https://openweathermap.org/api"
    }
  }
}